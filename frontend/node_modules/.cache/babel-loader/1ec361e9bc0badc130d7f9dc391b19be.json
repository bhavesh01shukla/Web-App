{"ast":null,"code":"var _jsxFileName = \"/home/bhavesh/sem4/dass/assgn/assgn2/Web-App/frontend/src/components/customer_home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class customer_home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.place_order = currentProduct => {\n      this.setState({\n        order_quantity: ''\n      });\n      var temp = JSON.parse(localStorage.getItem(\"cus\"));\n      console.log(\"printing cus name in place order func in cus_home.js\");\n      console.log(temp.username); //find avail quantity of pro\n      //find total quantity of pro\n\n      const neworder = {\n        vendor_name: currentProduct.vendor_name,\n        customer_name: currentProduct.temp_username,\n        product_name: currentProduct.p_name,\n        avail_quantity: currentProduct.avail_quantity,\n        total_quantity: currentProduct.total_quantity,\n        status: 'available'\n      };\n      console.log(\"printing avail quantity in place order cus_home.js\");\n      console.log(currentProduct.avail_quantity);\n      console.log(\"printing input order quantity in place order cus_home.js\");\n      console.log(this.order_quantity);\n\n      if (currentProduct.avail_quantity > this.order_quantity) {\n        console.log('order may be placed');\n      } // axios.post('http://localhost:4000/check-order', neworder)\n      // .then(res => {\n      //     if(res.data.pro[0].p_name===currentProduct.p_name){\n      //         console.log('printing response of check-order');\n      //         console.log(res.data.pro[0].p_name);\n      //         console.log(res.data.pro[0].avail_quantity);\n      //         if(res.data.pro[0].avail_quantity > this.order_quantity){\n      //             console.log('order may be placed')\n      //         }\n      //     }\n      //     else{\n      //         alert('error occured')\n      //     }\n      //     // this.setState({products: res.data.pro});\n      // })\n      // .catch(function(error) {\n      //     console.log(error);\n      // })\n\n    };\n\n    this.state = {\n      product_name: '',\n      products: [],\n      order_quantity: ''\n    };\n    this.sortByPriceAsc = this.sortByPriceAsc.bind(this);\n    this.sortByQuantityAsc = this.sortByQuantityAsc.bind(this);\n    this.onChangeProduct_name = this.onChangeProduct_name.bind(this);\n    this.onChangeOrder_quantity = this.onChangeOrder_quantity.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } /// method1 : using prevState and return\n\n\n  sortByPriceAsc() {\n    this.setState(prevState => {\n      return this.state.products.sort((a, b) => a.price - b.price);\n    });\n  } /// method2: using basic method\n\n\n  sortByQuantityAsc() {\n    this.setState({\n      products: this.state.products.sort((a, b) => a.avail_quantity - b.avail_quantity)\n    });\n  }\n\n  onChangeProduct_name(event) {\n    this.setState({\n      product_name: event.target.value\n    });\n  }\n\n  onChangeOrder_quantity(event) {\n    this.setState({\n      order_quantity: event.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProduct = {\n      p_name: this.state.product_name\n    };\n    console.log('printing search name');\n    console.log(newProduct);\n    axios.post('http://localhost:4000/search-product', newProduct).then(res => {\n      console.log('printing response');\n      console.log(res.data);\n      this.setState({\n        products: res.data.pro\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Note to customer: Only products with available quantity(greater > 0) will be displayed in search results\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Search Product \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.product_name,\n      onChange: this.onChangeProduct_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.sortByPriceAsc();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Sort by price\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.sortByQuantityAsc();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Sort by quantity\")), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Vendor name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Available Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Place Order\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.products.map((currentProduct, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, currentProduct.vendor_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, currentProduct.p_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, currentProduct.avail_quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, currentProduct.price), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.order_quantity,\n        onChange: this.onChangeOrder_quantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Order\",\n        onClick: () => {\n          this.place_order(currentProduct);\n        },\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })))));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/bhavesh/sem4/dass/assgn/assgn2/Web-App/frontend/src/components/customer_home.js"],"names":["React","Component","axios","BrowserRouter","Router","Route","Link","customer_home","constructor","props","place_order","currentProduct","setState","order_quantity","temp","JSON","parse","localStorage","getItem","console","log","username","neworder","vendor_name","customer_name","temp_username","product_name","p_name","avail_quantity","total_quantity","status","state","products","sortByPriceAsc","bind","sortByQuantityAsc","onChangeProduct_name","onChangeOrder_quantity","onSubmit","prevState","sort","a","b","price","event","target","value","e","preventDefault","newProduct","post","then","res","data","pro","catch","error","render","map","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class customer_home extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            product_name: '',\n            products: [],\n            order_quantity: ''\n        }\n    \n        this.sortByPriceAsc = this.sortByPriceAsc.bind(this);\n        this.sortByQuantityAsc = this.sortByQuantityAsc.bind(this);\n    \n        this.onChangeProduct_name = this.onChangeProduct_name.bind(this);\n        this.onChangeOrder_quantity = this.onChangeOrder_quantity.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    /// method1 : using prevState and return\n    sortByPriceAsc() {\n        this.setState(prevState => {\n            return this.state.products.sort((a, b) => (a.price - b.price))\n        });\n    }\n\n    /// method2: using basic method\n    sortByQuantityAsc() {\n        this.setState({\n            products: this.state.products.sort((a, b) => (a.avail_quantity - b.avail_quantity))\n        });\n    }\n    onChangeProduct_name(event) {\n        this.setState({ product_name: event.target.value });\n    }\n    onChangeOrder_quantity(event) {\n        this.setState({ order_quantity: event.target.value });\n    }\n    \n    onSubmit(e) {\n        e.preventDefault();\n\n        const newProduct = {\n            p_name: this.state.product_name,\n        }\n        console.log('printing search name')\n        console.log(newProduct)\n        axios.post('http://localhost:4000/search-product', newProduct)\n        .then(res => {\n            console.log('printing response');\n            console.log(res.data);\n            this.setState({products: res.data.pro});\n        })\n        .catch(function(error) {\n            console.log(error);\n        })\n    }\n\n    place_order=(currentProduct)=>{\n        this.setState({\n            order_quantity: '',\n        });\n        var temp=JSON.parse(localStorage.getItem(\"cus\"))\n        console.log(\"printing cus name in place order func in cus_home.js\")\n        console.log(temp.username)\n\n        //find avail quantity of pro\n        //find total quantity of pro\n        const neworder = {\n            vendor_name: currentProduct.vendor_name,\n            customer_name: currentProduct.temp_username,\n            product_name: currentProduct.p_name,\n            avail_quantity: currentProduct.avail_quantity,\n            total_quantity: currentProduct.total_quantity,\n            status: 'available'\n        };\n        console.log(\"printing avail quantity in place order cus_home.js\")\n        console.log(currentProduct.avail_quantity)\n        console.log(\"printing input order quantity in place order cus_home.js\")\n        console.log(this.order_quantity)\n        if(currentProduct.avail_quantity > this.order_quantity)\n        {console.log('order may be placed')}\n        // axios.post('http://localhost:4000/check-order', neworder)\n        // .then(res => {\n          \n        //     if(res.data.pro[0].p_name===currentProduct.p_name){\n        //         console.log('printing response of check-order');\n        //         console.log(res.data.pro[0].p_name);\n        //         console.log(res.data.pro[0].avail_quantity);\n\n                \n        //         if(res.data.pro[0].avail_quantity > this.order_quantity){\n        //             console.log('order may be placed')\n        //         }\n        //     }\n        //     else{\n        //         alert('error occured')\n        //     }\n        //     // this.setState({products: res.data.pro});\n        // })\n        // .catch(function(error) {\n        //     console.log(error);\n        // })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <p>Note to customer: Only products with available quantity(greater > 0) will be displayed in search results</p>\n\n                <br></br><br></br>\n    \n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Search Product </label>\n                        <input type=\"text\" className=\"form-control\" \n                        value={this.state.product_name} onChange={this.onChangeProduct_name}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\"  value=\"Search\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n\n                <br></br><br></br>\n                <div className=\"form-group\">\n                {/* onClick={()=>{this.sortByPriceAsc}} */}\n                <button type=\"button\" onClick={()=>{this.sortByPriceAsc()}} >Sort by price</button>\n                <button type=\"button\" onClick={()=>{this.sortByQuantityAsc()}} >Sort by quantity</button>\n                </div>\n                \n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Vendor name</th>\n                            <th>Product Name</th>\n                            {/* <th>Total Quantity</th> */}\n                            <th>Available Quantity</th>\n                            <th>Price</th>\n                            <th>Place Order</th>\n                            \n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.products.map((currentProduct, i) => {                            \n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendor_name}</td>\n                                        <td>{currentProduct.p_name}</td>\n                                        {/* <td>{currentProduct.total_quantity}</td> */}\n                                        <td>{currentProduct.avail_quantity}</td>\n                                        <td>{currentProduct.price}</td>\n                                        <td>\n                                            <form onSubmit={this.onSubmit}>\n                                                <div className=\"form-group\">\n                                                    <label>Quantity</label>\n                                                    <input type=\"number\" \n                                                        className=\"form-control\" \n                                                        value={this.state.order_quantity}\n                                                        onChange={this.onChangeOrder_quantity}\n                                                        />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <input type=\"submit\" value=\"Order\" onClick={()=>{this.place_order(currentProduct)}} className=\"btn btn-primary\"/>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                )\n                            \n                        })\n                    }\n                    </tbody>\n                </table>\n\n                {/* <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Give Order Quantity</label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.order_quantity}\n                               onChange={this.onChangeOrder_quantity}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Submit\n                        \" className=\"btn btn-primary\"/>\n                    </div>\n                </form> */}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}