{"ast":null,"code":"var _jsxFileName = \"/home/bhavesh/sem4/dass/assgn/assgn2/Web-App/frontend/src/components/ready_to_dispatch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.change_status = currentProduct => {\n      // console.log('in change_status')\n      const newPro = {\n        id: currentProduct._id,\n        vendor_name: currentProduct.vendor_name,\n        p_name: currentProduct.p_name,\n        total_quantity: currentProduct.total_quantity,\n        avail_quantity: currentProduct.avail_quantity,\n        price: currentProduct.price,\n        status: 'dispatch'\n      };\n      console.log(newPro);\n      axios.put('http://localhost:4000/change-product-status', newPro);\n    };\n\n    this.state = {\n      products: []\n    }; // this.change_status = this.change_status.bind(this);\n  } // onchange_status(event) {\n  //     this.setState({ username: event.target.value });\n  // }\n\n\n  componentDidMount() {\n    var temp = JSON.parse(localStorage.getItem(\"ven\"));\n    console.log('checking username');\n    console.log(temp);\n    const newUser = {\n      vendor_name: temp.username\n    };\n    console.log('checking newUser');\n    console.log(newUser); //check for get or post request\n\n    axios.post('http://localhost:4000/ready-to-dispatch', newUser).then(response => {\n      console.log('printing response');\n      console.log(response.data);\n      this.setState({\n        products: response.data.pro\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Vendor name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Total Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Change Status\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.products.map((currentProduct, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, currentProduct.vendor_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, currentProduct.p_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, currentProduct.total_quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, currentProduct.price), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, currentProduct._id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.change_status(currentProduct);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Dispatch\"), \" \"));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/bhavesh/sem4/dass/assgn/assgn2/Web-App/frontend/src/components/ready_to_dispatch.js"],"names":["React","Component","axios","ProductsList","constructor","props","change_status","currentProduct","newPro","id","_id","vendor_name","p_name","total_quantity","avail_quantity","price","status","console","log","put","state","products","componentDidMount","temp","JSON","parse","localStorage","getItem","newUser","username","post","then","response","data","setState","pro","catch","error","render","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class ProductsList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { products: [] }\n\n        // this.change_status = this.change_status.bind(this);\n    }\n\n    // onchange_status(event) {\n    //     this.setState({ username: event.target.value });\n    // }\n\n    change_status = (currentProduct) => {\n        // console.log('in change_status')\n        const newPro = {\n            id: currentProduct._id,\n            vendor_name: currentProduct.vendor_name,\n            p_name: currentProduct.p_name,\n            total_quantity: currentProduct.total_quantity,\n            avail_quantity: currentProduct.avail_quantity,\n            price: currentProduct.price,\n            status: 'dispatch'\n        };\n        console.log(newPro)\n        axios.put('http://localhost:4000/change-product-status', newPro)\n    }\n\n    componentDidMount() {\n\n        var temp = JSON.parse(localStorage.getItem(\"ven\"))\n        console.log('checking username')\n        console.log(temp)\n\n        const newUser = {\n            vendor_name: temp.username\n        };\n        console.log('checking newUser')\n        console.log(newUser)\n        //check for get or post request\n        axios.post('http://localhost:4000/ready-to-dispatch', newUser)\n            .then(response => {\n                console.log('printing response');\n                console.log(response.data);\n                this.setState({ products: response.data.pro });\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Vendor name</th>\n                            <th>Product Name</th>\n                            <th>Total Quantity</th>\n                            <th>Price</th>\n                            <th>Id</th>\n                            <th>Change Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.products.map((currentProduct, i) => {\n                                return (\n                                    <tr>\n                                        <td>{currentProduct.vendor_name}</td>\n                                        <td>{currentProduct.p_name}</td>\n                                        <td>{currentProduct.total_quantity}</td>\n                                        {/* <td>{currentProduct.avail_quantity}</td> */}\n                                        <td>{currentProduct.price}</td>\n                                        <td>{currentProduct._id}</td>\n                                        <td> <button type=\"button\" onClick={()=>{this.change_status(currentProduct)}}>Dispatch</button> </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}